<div class="see-box col-xs-10 col-xs-offset-1 col-sm-6 col-sm-offset-3 text-center">
  <h1>
  Lean Leaf
  </h1>

  <%= link_to 'Farmer Sign Up', farmers_path, :class => 'btn btn-warning' %>
  <%= link_to 'User Sign Up', users_path, :class => 'btn btn-warning' %>

</div>

<%= @place.inspect %>

<hr />

<%= @place.latitude.inspect %>, <%= @place.longitude.inspect %>

<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>

  <script>
    function initialize() {
      var myLatlng = new google.maps.LatLng(<%= @place.latitude %>, <%= @place.longitude %>);
      var mapOptions = {
        zoom: 4,
        center: myLatlng
      }

      var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

      var marker = new google.maps.Marker({
          position: myLatlng,
          map: map,
          title: 'Hello World!'
      });
    }

    google.maps.event.addDomListener(window, 'load', initialize);

  </script>

      <div id="map-canvas"></div>


<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>

<script>
// The following example creates complex markers to indicate beaches near
// Sydney, NSW, Australia. Note that the anchor is set to
// (0,32) to correspond to the base of the flagpole.

  function initialize() {
    var mapOptions = {
      zoom: 10,
      center: new google.maps.LatLng(<% @place.latitude %>, <%= @place.longitude %>)
    }

    var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
    setMarkers(map, beaches);
  }

  /**
   * Data for the markers consisting of a name, a LatLng and a zIndex for
   * the order in which these markers should display on top of each
   * other.
   */
  var beaches = [
    ['Places', <% @place.latitude %>, <%= @place.longitude %>],
  ];

  function setMarkers(map, locations) {
    // Add markers to the map

    // Marker sizes are expressed as a Size of X,Y
    // where the origin of the image (0,0) is located
    // in the top left of the image.

    // Origins, anchor positions and coordinates of the marker
    // increase in the X direction to the right and in
    // the Y direction down.
    var image = {
      url: 'images/beachflag.png',
      // This marker is 20 pixels wide by 32 pixels tall.
      size: new google.maps.Size(20, 32),
      // The origin for this image is 0,0.
      origin: new google.maps.Point(0,0),
      // The anchor for this image is the base of the flagpole at 0,32.
      anchor: new google.maps.Point(0, 32)
    };
    // Shapes define the clickable region of the icon.
    // The type defines an HTML &lt;area&gt; element 'poly' which
    // traces out a polygon as a series of X,Y points. The final
    // coordinate closes the poly by connecting to the first
    // coordinate.
    var shape = {
        coord: [1, 1, 1, 20, 18, 20, 18 , 1],
        type: 'poly'
    };
    for (var i = 0; i < locations.length; i++) {
      var beach = locations[i];
      var myLatLng = new google.maps.LatLng(beach[1], beach[2]);
      var marker = new google.maps.Marker({
          position: myLatLng,
          map: map,
          icon: image,
          shape: shape,
          title: beach[0],
          zIndex: beach[3]
      });
    }
  }

  google.maps.event.addDomListener(window, 'load', initialize);

</script>
  

  <body>
    <div id="map-canvas"></div>
  </body>